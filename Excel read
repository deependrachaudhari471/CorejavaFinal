private static final String FILE_PATH = "D:/TestExcelFilePOC.xlsx";

	private static List<Object> getList() {
		List studentList = new ArrayList();
		FileInputStream fis = null;
		try {
			fis = new FileInputStream(FILE_PATH);

			// Using XSSF for xlsx format, for xls use HSSF
			Workbook workbook = new XSSFWorkbook(fis);
			int numberOfSheets = workbook.getNumberOfSheets();
			// looping over each workbook sheet
			for (int i = 0; i < numberOfSheets; i++) {
				Sheet sheet = workbook.getSheetAt(i);
				Iterator rowIterator = sheet.iterator();
				// iterating over each row
				while (rowIterator.hasNext()) {
					RTFBean rtfBean = new RTFBean();
					Row row = (Row) rowIterator.next();
					Iterator cellIterator = row.cellIterator();
					// Iterating over each cell (column wise) in a particular
					// row.
					while (cellIterator.hasNext()) {

						Cell cell = (Cell) cellIterator.next();
						// The Cell Containing String will is name.
						if (Cell.CELL_TYPE_STRING == cell.getCellType()) {
							// Cell with index 1 contains marks in Maths
							if (cell.getColumnIndex() == 0) {
								rtfBean.setLocale(cell.getStringCellValue());
							} else if (cell.getColumnIndex() == 1) {
								rtfBean.setSbuId(cell.getStringCellValue());
							} else if (cell.getColumnIndex() == 2) {
								rtfBean.setCategory(cell.getStringCellValue());
							} else if (cell.getColumnIndex() == 3) {
								rtfBean.setSubCategory(cell.getStringCellValue());
							} else if (cell.getColumnIndex() == 4) {
								rtfBean.setModel(cell.getStringCellValue());
							} else if (cell.getColumnIndex() == 5) {
								rtfBean.setBasecode(cell.getStringCellValue());
							} else if (cell.getColumnIndex() == 6) {
								rtfBean.setBasecodedesc(cell.getStringCellValue());
							} else if (cell.getColumnIndex() == 7) {
								rtfBean.setBasecodeUpdatedTime(cell.getStringCellValue());
							}
						}
						// end iterating a row, add all the elements of a row in
						// list
						studentList.add(rtfBean);
					}
					 // System.out.println("  ");
				}
			}
			fis.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return studentList;

	}

	public static void main(String[] args) {
		int count = 0;
		Iterator it = getRtfList().iterator();
		while (it.hasNext()) {
			RTFBean bean = (RTFBean) it.next();
			
			System.out.println(count++ +"---"+bean.getLocale() + "---" + bean.getBasecode() + "----" + bean.getBasecodedesc());
		}
	}
